# Defining dev namespace
apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
# Defining Resource quota to use within the namespace dev
apiVersion: v1
kind: ResourceQuota
metadata:
  name: dev-quota
  namespace: dev # namespace is used to define for which namespace we are defining this quota
spec:
  hard:
    pods: "100"
    requests.cpu: "2"
    requests.memory: 2Gi
    limits.cpu: "10"
    limits.memory: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: dev
  name: article-db-configmap
data:
  database_name: 'article_db'
#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  namespace: dev
#  name: postgres-config
#data:
#  pg_hba.conf: |
#    # Custom PostgreSQL HBA (Host-Based Authentication) Configuration
#
#    # Allow all connections with the "trust" method
#    # This configuration is not recommended for production environments
#    # It allows all users from all IP addresses to connect without authentication
#    host    all             all             0.0.0.0/0               trust
#    host    all             all             ::/0                    trust
---
kind: Secret
apiVersion: v1
metadata:
  namespace: dev
  name: article-db-secret
type: Opaque
data:
  article-db-username: cG9zdGdyZXMK
  article-db-password: c2VjcmV0Cg==
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: dev
  name: article-db-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 512Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: dev
  name: article-db-deployment
  labels:
    app-name: article-db
    type: deployment
spec:
  template:
    metadata:
      namespace: dev
      name: article-db-pod
      labels:
        app-name: article-db
        type: pod
    spec:
      containers:
        - name: article-db
          image: postgres
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "1"
          env:
            - name: POSTGRES_DB
              value: article_db
            - name: POSTGRES_USER
              value: postgres
#              valueFrom:
#                secretKeyRef:
#                  name: article-db-secret
#                  key: article-db-username
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          ports:
            - containerPort: 5432  # PostgreSQL default port
          volumeMounts:
            - name: article-db-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: article-db-data
          persistentVolumeClaim:
            claimName: article-db-pvc  # Create a PVC for persistent storage
  selector:
    matchLabels:
      app-name: article-db
      type: pod
  replicas: 2
  serviceName: article-db-service
---
apiVersion: v1
kind: Service
metadata:
  name: article-db-service
  namespace: dev
spec:
#  clusterIP: None
  selector:
    app-name: article-db
    type: pod  # Service communicates to the POD directly
  ports:
    - protocol: TCP
      port: 3222
      targetPort: 5432
      nodePort: 32222
  type: NodePort   # Change to NodePort or LoadBalancer if needed
